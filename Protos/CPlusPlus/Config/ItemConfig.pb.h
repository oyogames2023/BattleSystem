// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: Config/ItemConfig.proto
// Protobuf C++ Version: 5.29.0-dev

#ifndef Config_2fItemConfig_2eproto_2epb_2eh
#define Config_2fItemConfig_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/unknown_field_set.h"
#include "item/item.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_Config_2fItemConfig_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_Config_2fItemConfig_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_Config_2fItemConfig_2eproto;
namespace config {
class Sheet1;
struct Sheet1DefaultTypeInternal;
extern Sheet1DefaultTypeInternal _Sheet1_default_instance_;
class Sheet1_ItemRewardEntry_DoNotUse;
struct Sheet1_ItemRewardEntry_DoNotUseDefaultTypeInternal;
extern Sheet1_ItemRewardEntry_DoNotUseDefaultTypeInternal _Sheet1_ItemRewardEntry_DoNotUse_default_instance_;
}  // namespace config
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace config {

// ===================================================================


// -------------------------------------------------------------------

class Sheet1_ItemRewardEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          ::uint32_t, ::uint32_t,
          ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
          ::google::protobuf::internal::WireFormatLite::TYPE_UINT32> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      ::uint32_t, ::uint32_t,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>;
  Sheet1_ItemRewardEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Sheet1_ItemRewardEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit Sheet1_ItemRewardEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const Sheet1_ItemRewardEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const Sheet1_ItemRewardEntry_DoNotUse*>(
        &_Sheet1_ItemRewardEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_Config_2fItemConfig_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class Sheet1 final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:config.Sheet1) */ {
 public:
  inline Sheet1() : Sheet1(nullptr) {}
  ~Sheet1() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Sheet1* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Sheet1));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Sheet1(
      ::google::protobuf::internal::ConstantInitialized);

  inline Sheet1(const Sheet1& from) : Sheet1(nullptr, from) {}
  inline Sheet1(Sheet1&& from) noexcept
      : Sheet1(nullptr, std::move(from)) {}
  inline Sheet1& operator=(const Sheet1& from) {
    CopyFrom(from);
    return *this;
  }
  inline Sheet1& operator=(Sheet1&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Sheet1& default_instance() {
    return *internal_default_instance();
  }
  static inline const Sheet1* internal_default_instance() {
    return reinterpret_cast<const Sheet1*>(
        &_Sheet1_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(Sheet1& a, Sheet1& b) { a.Swap(&b); }
  inline void Swap(Sheet1* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Sheet1* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Sheet1* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Sheet1>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Sheet1& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Sheet1& from) { Sheet1::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Sheet1* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "config.Sheet1"; }

 protected:
  explicit Sheet1(::google::protobuf::Arena* arena);
  Sheet1(::google::protobuf::Arena* arena, const Sheet1& from);
  Sheet1(::google::protobuf::Arena* arena, Sheet1&& from) noexcept
      : Sheet1(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kItemRewardFieldNumber = 3,
    kNameFieldNumber = 2,
    kBonusItemRewardFieldNumber = 4,
    kIdFieldNumber = 1,
  };
  // map<uint32, uint32> ItemReward = 3;
  int itemreward_size() const;
  private:
  int _internal_itemreward_size() const;

  public:
  void clear_itemreward() ;
  const ::google::protobuf::Map<::uint32_t, ::uint32_t>& itemreward() const;
  ::google::protobuf::Map<::uint32_t, ::uint32_t>* mutable_itemreward();

  private:
  const ::google::protobuf::Map<::uint32_t, ::uint32_t>& _internal_itemreward() const;
  ::google::protobuf::Map<::uint32_t, ::uint32_t>* _internal_mutable_itemreward();

  public:
  // string Name = 2;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .item.ItemReward BonusItemReward = 4;
  bool has_bonusitemreward() const;
  void clear_bonusitemreward() ;
  const ::item::ItemReward& bonusitemreward() const;
  PROTOBUF_NODISCARD ::item::ItemReward* release_bonusitemreward();
  ::item::ItemReward* mutable_bonusitemreward();
  void set_allocated_bonusitemreward(::item::ItemReward* value);
  void unsafe_arena_set_allocated_bonusitemreward(::item::ItemReward* value);
  ::item::ItemReward* unsafe_arena_release_bonusitemreward();

  private:
  const ::item::ItemReward& _internal_bonusitemreward() const;
  ::item::ItemReward* _internal_mutable_bonusitemreward();

  public:
  // uint32 Id = 1;
  void clear_id() ;
  ::uint32_t id() const;
  void set_id(::uint32_t value);

  private:
  ::uint32_t _internal_id() const;
  void _internal_set_id(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:config.Sheet1)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 2,
      26, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Sheet1_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Sheet1& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::MapField<Sheet1_ItemRewardEntry_DoNotUse, ::uint32_t, ::uint32_t,
                      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
                      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>
        itemreward_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::item::ItemReward* bonusitemreward_;
    ::uint32_t id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Config_2fItemConfig_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Sheet1

// uint32 Id = 1;
inline void Sheet1::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = 0u;
}
inline ::uint32_t Sheet1::id() const {
  // @@protoc_insertion_point(field_get:config.Sheet1.Id)
  return _internal_id();
}
inline void Sheet1::set_id(::uint32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:config.Sheet1.Id)
}
inline ::uint32_t Sheet1::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void Sheet1::_internal_set_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// string Name = 2;
inline void Sheet1::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& Sheet1::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:config.Sheet1.Name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Sheet1::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:config.Sheet1.Name)
}
inline std::string* Sheet1::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:config.Sheet1.Name)
  return _s;
}
inline const std::string& Sheet1::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void Sheet1::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* Sheet1::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* Sheet1::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:config.Sheet1.Name)
  return _impl_.name_.Release();
}
inline void Sheet1::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:config.Sheet1.Name)
}

// map<uint32, uint32> ItemReward = 3;
inline int Sheet1::_internal_itemreward_size() const {
  return _internal_itemreward().size();
}
inline int Sheet1::itemreward_size() const {
  return _internal_itemreward_size();
}
inline void Sheet1::clear_itemreward() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.itemreward_.Clear();
}
inline const ::google::protobuf::Map<::uint32_t, ::uint32_t>& Sheet1::_internal_itemreward() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.itemreward_.GetMap();
}
inline const ::google::protobuf::Map<::uint32_t, ::uint32_t>& Sheet1::itemreward() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:config.Sheet1.ItemReward)
  return _internal_itemreward();
}
inline ::google::protobuf::Map<::uint32_t, ::uint32_t>* Sheet1::_internal_mutable_itemreward() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.itemreward_.MutableMap();
}
inline ::google::protobuf::Map<::uint32_t, ::uint32_t>* Sheet1::mutable_itemreward() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:config.Sheet1.ItemReward)
  return _internal_mutable_itemreward();
}

// .item.ItemReward BonusItemReward = 4;
inline bool Sheet1::has_bonusitemreward() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.bonusitemreward_ != nullptr);
  return value;
}
inline const ::item::ItemReward& Sheet1::_internal_bonusitemreward() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::item::ItemReward* p = _impl_.bonusitemreward_;
  return p != nullptr ? *p : reinterpret_cast<const ::item::ItemReward&>(::item::_ItemReward_default_instance_);
}
inline const ::item::ItemReward& Sheet1::bonusitemreward() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:config.Sheet1.BonusItemReward)
  return _internal_bonusitemreward();
}
inline void Sheet1::unsafe_arena_set_allocated_bonusitemreward(::item::ItemReward* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.bonusitemreward_);
  }
  _impl_.bonusitemreward_ = reinterpret_cast<::item::ItemReward*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:config.Sheet1.BonusItemReward)
}
inline ::item::ItemReward* Sheet1::release_bonusitemreward() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::item::ItemReward* released = _impl_.bonusitemreward_;
  _impl_.bonusitemreward_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::item::ItemReward* Sheet1::unsafe_arena_release_bonusitemreward() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:config.Sheet1.BonusItemReward)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::item::ItemReward* temp = _impl_.bonusitemreward_;
  _impl_.bonusitemreward_ = nullptr;
  return temp;
}
inline ::item::ItemReward* Sheet1::_internal_mutable_bonusitemreward() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.bonusitemreward_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::item::ItemReward>(GetArena());
    _impl_.bonusitemreward_ = reinterpret_cast<::item::ItemReward*>(p);
  }
  return _impl_.bonusitemreward_;
}
inline ::item::ItemReward* Sheet1::mutable_bonusitemreward() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::item::ItemReward* _msg = _internal_mutable_bonusitemreward();
  // @@protoc_insertion_point(field_mutable:config.Sheet1.BonusItemReward)
  return _msg;
}
inline void Sheet1::set_allocated_bonusitemreward(::item::ItemReward* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.bonusitemreward_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.bonusitemreward_ = reinterpret_cast<::item::ItemReward*>(value);
  // @@protoc_insertion_point(field_set_allocated:config.Sheet1.BonusItemReward)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace config


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // Config_2fItemConfig_2eproto_2epb_2eh
